{"ast":null,"code":"import { Cliente } from \"./cliente\";\nimport Swal from 'sweetalert2'; // Importa SweetAlert2 correctamente\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(clienteService, router) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.cliente = new Cliente();\n    this.titulo = \"Crear Cliente\";\n  }\n  create() {\n    this.clienteService.create(this.cliente).subscribe(cliente => {\n      Swal.fire('Nuevo cliente', `Cliente ${cliente.nombre} creado con éxito!`, 'success'); // Usa SweetAlert2 correctamente\n      this.router.navigate(['/clientes']);\n    }, error => {\n      console.error(error);\n      Swal.fire('Error', 'Ha ocurrido un problema al crear el cliente', 'error'); // Usa SweetAlert2 correctamente\n    });\n  }\n}\n\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.Router));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"card\", \"bg-dark\", \"text-white\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"nombre\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"nombre\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"apellido\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.cliente.nombre = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.cliente.apellido = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 6)(19, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.cliente.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 6)(22, \"button\", 12);\n      i0.ɵɵtext(23, \"Crear\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.apellido);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["Cliente","Swal","FormComponent","constructor","clienteService","router","cliente","titulo","create","subscribe","fire","nombre","navigate","error","console","i0","ɵɵdirectiveInject","i1","ClienteService","i2","Router","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_form_ngSubmit_4_listener","FormComponent_Template_input_ngModelChange_9_listener","$event","FormComponent_Template_input_ngModelChange_14_listener","apellido","FormComponent_Template_input_ngModelChange_19_listener","email","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.ts","C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from \"./cliente\";\nimport { ClienteService } from \"./cliente.service\";\nimport { Router } from \"@angular/router\";\nimport Swal from 'sweetalert2'; // Importa SweetAlert2 correctamente\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html'\n})\nexport class FormComponent {\n  cliente: Cliente = new Cliente();\n  titulo: string = \"Crear Cliente\";\n\n  constructor(private clienteService: ClienteService, private router: Router) {}\n\n  create(): void {\n    this.clienteService.create(this.cliente).subscribe(\n      (cliente) => {\n        Swal.fire('Nuevo cliente', `Cliente ${cliente.nombre} creado con éxito!`, 'success'); // Usa SweetAlert2 correctamente\n        this.router.navigate(['/clientes']);\n      },\n      (error) => {\n        console.error(error);\n        Swal.fire('Error', 'Ha ocurrido un problema al crear el cliente', 'error'); // Usa SweetAlert2 correctamente\n      }\n    );\n  }\n}\n","<div class=\"card bg-dark text-white\">\n    <div class=\"card-header\">{{ titulo }}</div>\n    <div class=\"card-body\">\n\n        <form (ngSubmit)= \"create()\">\n            <div class=\"form-group row\">\n\n                <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nombre\" name=\"nombre\">\n                    <!--ngModel es para mapear objetos-->\n                </div>\n\n            </div>\n\n       \n\n       \n            <div class=\"form-group row\">\n\n                <label for=\"apellido\" class=\"col-form-label col-sm-2\">Apellido</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.apellido\" name=\"apellido\">\n\n                </div>\n\n            </div>\n\n        \n\n\n        \n            <div class=\"form-group row\">     \n                <label for=\"email\" class=\"col-form-label col-sm-2\">Email</label>        \n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.email\" name=\"email\">\n                </div>\n            </div> \n        \n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n                <button class=\"btn btn-primary\" role=\"button\">Crear</button>\n            </div>\n        </div>\n    </form>\n\n\n    </div>\n</div>"],"mappings":"AACA,SAASA,OAAO,QAAQ,WAAW;AAGnC,OAAOC,IAAI,MAAM,aAAa,CAAC,CAAC;;;;;AAMhC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAHlE,KAAAC,OAAO,GAAY,IAAIN,OAAO,EAAE;IAChC,KAAAO,MAAM,GAAW,eAAe;EAE6C;EAE7EC,MAAMA,CAAA;IACJ,IAAI,CAACJ,cAAc,CAACI,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC,CAACG,SAAS,CAC/CH,OAAO,IAAI;MACVL,IAAI,CAACS,IAAI,CAAC,eAAe,EAAE,WAAWJ,OAAO,CAACK,MAAM,oBAAoB,EAAE,SAAS,CAAC,CAAC,CAAC;MACtF,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBZ,IAAI,CAACS,IAAI,CAAC,OAAO,EAAE,6CAA6C,EAAE,OAAO,CAAC,CAAC,CAAC;IAC9E,CAAC,CACF;EACH;;;AAjBWR,aAAa,C;mBAAbA,aAAa,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAblB,aAAa,C;QAAbA,aAAa;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV1BZ,EAAA,CAAAc,cAAA,aAAqC;MACRd,EAAA,CAAAe,MAAA,GAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAM;MAC3ChB,EAAA,CAAAc,cAAA,aAAuB;MAEbd,EAAA,CAAAiB,UAAA,sBAAAC,gDAAA;QAAA,OAAaL,GAAA,CAAApB,MAAA,EAAQ;MAAA,EAAC;MACxBO,EAAA,CAAAc,cAAA,aAA4B;MAE4Bd,EAAA,CAAAe,MAAA,aAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAElEhB,EAAA,CAAAc,cAAA,aAAsB;MACsBd,EAAA,CAAAiB,UAAA,2BAAAE,sDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAtB,OAAA,CAAAK,MAAA,GAAAwB,MAAA;MAAA,EAA4B;MAApEpB,EAAA,CAAAgB,YAAA,EAAmF;MAS3FhB,EAAA,CAAAc,cAAA,cAA4B;MAE8Bd,EAAA,CAAAe,MAAA,gBAAQ;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAEtEhB,EAAA,CAAAc,cAAA,cAAsB;MACsBd,EAAA,CAAAiB,UAAA,2BAAAI,uDAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAtB,OAAA,CAAA+B,QAAA,GAAAF,MAAA;MAAA,EAA8B;MAAtEpB,EAAA,CAAAgB,YAAA,EAAuF;MAU/FhB,EAAA,CAAAc,cAAA,cAA4B;MAC2Bd,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAChEhB,EAAA,CAAAc,cAAA,cAAsB;MACsBd,EAAA,CAAAiB,UAAA,2BAAAM,uDAAAH,MAAA;QAAA,OAAAP,GAAA,CAAAtB,OAAA,CAAAiC,KAAA,GAAAJ,MAAA;MAAA,EAA2B;MAAnEpB,EAAA,CAAAgB,YAAA,EAAiF;MAK7FhB,EAAA,CAAAc,cAAA,cAA4B;MAE0Bd,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MA3C/ChB,EAAA,CAAAyB,SAAA,GAAY;MAAZzB,EAAA,CAAA0B,iBAAA,CAAAb,GAAA,CAAArB,MAAA,CAAY;MASmBQ,EAAA,CAAAyB,SAAA,GAA4B;MAA5BzB,EAAA,CAAA2B,UAAA,YAAAd,GAAA,CAAAtB,OAAA,CAAAK,MAAA,CAA4B;MAc5BI,EAAA,CAAAyB,SAAA,GAA8B;MAA9BzB,EAAA,CAAA2B,UAAA,YAAAd,GAAA,CAAAtB,OAAA,CAAA+B,QAAA,CAA8B;MAa9BtB,EAAA,CAAAyB,SAAA,GAA2B;MAA3BzB,EAAA,CAAA2B,UAAA,YAAAd,GAAA,CAAAtB,OAAA,CAAAiC,KAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}