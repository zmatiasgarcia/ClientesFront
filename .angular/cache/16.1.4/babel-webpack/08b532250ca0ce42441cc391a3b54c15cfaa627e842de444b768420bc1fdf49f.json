{"ast":null,"code":"import { Cliente } from \"./cliente\";\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(clienteService, router, activatedRoute) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.cliente = new Cliente();\n    this.titulo = \"Crear Cliente\";\n  }\n  cargarCliente() {}\n  create() {\n    this.clienteService.create(this.cliente).subscribe(cliente => {\n      this.router.navigate(['/clientes']);\n      swal.fire('Nuevo cliente', `Cliente ${cliente.nombre} creado con existo!`, 'success');\n    });\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"card\", \"bg-dark\", \"text-white\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"nombre\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"nombre\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"apellido\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.cliente.nombre = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.cliente.apellido = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 6)(19, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.cliente.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 6)(22, \"button\", 12);\n      i0.ɵɵtext(23, \"Crear\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.apellido);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["Cliente","swal","FormComponent","constructor","clienteService","router","activatedRoute","cliente","titulo","cargarCliente","create","subscribe","navigate","fire","nombre","i0","ɵɵdirectiveInject","i1","ClienteService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_form_ngSubmit_4_listener","FormComponent_Template_input_ngModelChange_9_listener","$event","FormComponent_Template_input_ngModelChange_14_listener","apellido","FormComponent_Template_input_ngModelChange_19_listener","email","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.ts","C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.html"],"sourcesContent":["\nimport { Component } from '@angular/core';\nimport { Cliente  } from \"./cliente\";\nimport { ClienteService } from \"./cliente.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport  swal  from 'sweetalert2';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html'\n  \n})\nexport class FormComponent {\n    cliente:Cliente = new Cliente();\n    titulo: string = \"Crear Cliente\";\n  constructor(private clienteService: ClienteService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute ){\n    \n  }\n\n   cargarCliente(): void{\n\n   }\n\n   create(): void{\n    this.clienteService.create(this.cliente)\n    .subscribe(cliente => {\n      this.router.navigate(['/clientes'])\n      swal.fire('Nuevo cliente', `Cliente ${cliente.nombre} creado con existo!`,'success')\n  }\n  );\n}\n\n}\n","<div class=\"card bg-dark text-white\">\n    <div class=\"card-header\">{{ titulo }}</div>\n    <div class=\"card-body\">\n\n        <form (ngSubmit)= \"create()\">\n            <div class=\"form-group row\">\n\n                <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nombre\" name=\"nombre\">\n                    <!--ngModel es para mapear objetos-->\n                </div>\n\n            </div>\n\n       \n\n       \n            <div class=\"form-group row\">\n\n                <label for=\"apellido\" class=\"col-form-label col-sm-2\">Apellido</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.apellido\" name=\"apellido\">\n\n                </div>\n\n            </div>\n\n        \n\n\n        \n            <div class=\"form-group row\">     \n                <label for=\"email\" class=\"col-form-label col-sm-2\">Email</label>        \n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.email\" name=\"email\">\n                </div>\n            </div> \n        \n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n                <button class=\"btn btn-primary\" role=\"button\">Crear</button>\n            </div>\n        </div>\n    </form>\n\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}