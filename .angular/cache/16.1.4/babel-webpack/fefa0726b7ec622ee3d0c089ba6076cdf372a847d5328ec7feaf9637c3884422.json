{"ast":null,"code":"import { Cliente } from \"./cliente\";\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FormComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Nombre es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Nombre debe tener al menos 4 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, FormComponent_div_11_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, FormComponent_div_11_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors.minlength);\n  }\n}\nfunction FormComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function FormComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.create());\n    });\n    i0.ɵɵtext(1, \"Crear\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormComponent_ng_template_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.update());\n    });\n    i0.ɵɵtext(1, \"Editar\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormComponent {\n  constructor(clienteService, router, activatedRoute) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.cliente = new Cliente();\n    this.titulo = \"Crear Cliente\";\n  }\n  ngOnInit() {\n    this.cargarCliente();\n  }\n  cargarCliente() {\n    this.activatedRoute.params.subscribe(params => {\n      let id = params['id'];\n      if (id) {\n        this.clienteService.getCliente(id).subscribe(cliente => this.cliente = cliente);\n      }\n    });\n  }\n  create() {\n    this.clienteService.create(this.cliente).subscribe(cliente => {\n      this.router.navigate(['/clientes']);\n      swal.fire('Nuevo cliente', `El cliente ${cliente.nombre} ha sido creado con exito!`, 'success');\n    });\n  }\n  update() {\n    this.clienteService.update(this.cliente).subscribe(json => {\n      this.router.navigate(['/clientes']);\n      swal.fire('Cliente Actualizado', `Cliente ${json.cliente.nombre} actualizado con exito`, 'success');\n    });\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 27,\n  vars: 7,\n  consts: [[1, \"card\", \"bg-dark\", \"text-white\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"form-group\", \"row\"], [\"for\", \"nombre\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"nombre\", \"required\", \"\", \"minlength\", \"4\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"nombre\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"apellido\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\")(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.cliente.nombre = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, FormComponent_div_11_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.cliente.apellido = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.cliente.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 3)(23, \"div\", 5);\n      i0.ɵɵtemplate(24, FormComponent_button_24_Template, 2, 0, \"button\", 13);\n      i0.ɵɵtemplate(25, FormComponent_ng_template_25_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      const _r3 = i0.ɵɵreference(26);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r0.invalid && (_r0.dirt || _r0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.apellido);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cliente.id)(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["Cliente","swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","FormComponent_div_11_div_1_Template","FormComponent_div_11_div_2_Template","ɵɵadvance","ɵɵproperty","_r0","errors","required","minlength","ɵɵlistener","FormComponent_button_24_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","create","FormComponent_ng_template_25_Template_button_click_0_listener","_r10","ctx_r9","update","FormComponent","constructor","clienteService","router","activatedRoute","cliente","titulo","ngOnInit","cargarCliente","params","subscribe","id","getCliente","navigate","fire","nombre","json","ɵɵdirectiveInject","i1","ClienteService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","FormComponent_Template_input_ngModelChange_9_listener","$event","FormComponent_div_11_Template","FormComponent_Template_input_ngModelChange_16_listener","apellido","FormComponent_Template_input_ngModelChange_21_listener","email","FormComponent_button_24_Template","FormComponent_ng_template_25_Template","ɵɵtemplateRefExtractor","ɵɵtextInterpolate","invalid","dirt","touched","_r3"],"sources":["C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.ts","C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\form.component.html"],"sourcesContent":["\nimport { Component } from '@angular/core';\nimport { Cliente  } from \"./cliente\";\nimport { ClienteService } from \"./cliente.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport  swal  from 'sweetalert2';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html'\n  \n})\nexport class FormComponent {\n    cliente:Cliente = new Cliente();\n    titulo: string = \"Crear Cliente\";\n  constructor(private clienteService: ClienteService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute ){\n    \n  }\n\n  ngOnInit(){\n    this.cargarCliente();\n  }\n\n   cargarCliente(): void{\n      this.activatedRoute.params.subscribe(params => {\n        let id = params['id']\n        if(id){\n          this.clienteService.getCliente(id).subscribe( (cliente) => this.cliente = cliente)\n        }\n      })\n   }\n\n   create(): void{\n    this.clienteService.create(this.cliente)\n    .subscribe(cliente => {\n      this.router.navigate(['/clientes'])\n      swal.fire('Nuevo cliente', `El cliente ${cliente.nombre} ha sido creado con exito!`,'success')\n  }\n  );\n}\n\nupdate(): void{\n  this.clienteService.update(this.cliente)\n  .subscribe(json =>{\n    this.router.navigate(['/clientes'])\n    swal.fire('Cliente Actualizado', `Cliente ${json.cliente.nombre} actualizado con exito`,'success');\n  })\n}\n\n\n\n}\n","<div class=\"card bg-dark text-white\">\n    <div class=\"card-header\">{{ titulo }}</div>\n    <div class=\"card-body\">\n\n        <form>\n            <div class=\"form-group row\">\n\n                <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nombre\" name=\"nombre\" required minlength=\"4\" #nombre =\"ngModel\">\n                    <!--ngModel es para mapear objetos-->\n                    <div class=\"alert alert-danger\" *ngIf=\"nombre.invalid && (nombre.dirt || nombre.touched)\">\n                        <div *ngIf=\"nombre.errors.required\">\n                            Nombre es requerido\n                        </div>\n\n                        <div *ngIf=\"nombre.errors.minlength\">\n                            Nombre debe tener al menos 4 caracteres\n\n                        </div>\n                            \n                    </div>\n                </div>\n\n            </div>\n\n       \n\n       \n            <div class=\"form-group row\">\n\n                <label for=\"apellido\" class=\"col-form-label col-sm-2\">Apellido</label>\n\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.apellido\" name=\"apellido\">\n\n                </div>\n\n            </div>\n\n        \n\n\n        \n            <div class=\"form-group row\">     \n                <label for=\"email\" class=\"col-form-label col-sm-2\">Email</label>        \n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.email\" name=\"email\">\n                </div>\n            </div> \n        \n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n                <button class=\"btn btn-primary\" role=\"button\" (click)='create()' *ngIf=\"!cliente.id else elseBlock\">Crear</button>\n            \n                <ng-template #elseBlock>\n                    <button type=\"button\" class=\"btn btn-primary\" role=\"button\" (click)=\"update()\">Editar</button>\n                </ng-template>\n            </div>\n        </div>\n    </form>\n\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}