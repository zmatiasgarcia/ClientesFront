{"ast":null,"code":"import { formatDate } from \"@angular/common\";\nimport { throwError } from 'rxjs';\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { map, catchError } from \"rxjs/operators\";\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ClienteService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.urlEndPoint = 'http://localhost:8080/api/clientes';\n    this.httpHeader = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getClientes() {\n    //return of(CLIENTES);\n    return this.http.get(this.urlEndPoint).pipe(map(response => {\n      let clientes = response;\n      return clientes.map(cliente => {\n        cliente.nombre = cliente.nombre.toUpperCase();\n        cliente.createAt = formatDate(cliente.createAt, 'dd-MM-yyyy', 'en-US');\n        return cliente;\n      });\n    }));\n  }\n  create(cliente) {\n    return this.http.post(this.urlEndPoint, cliente, {\n      headers: this.httpHeader\n    }).pipe(map(response => response.cliente), catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      console.error(e.error.mensaje);\n      swal.fire(e.error.mensaje, e.error.error, 'error');\n      return throwError(e);\n    }));\n  }\n  getCliente(id) {\n    return this.http.get(`${this.urlEndPoint}/${id}`).pipe(catchError(e => {\n      this.router.navigate(['/clientes']);\n      console.error(e.error.mensaje);\n      swal.fire('Error al editar', e.error.mensaje, 'error');\n      return throwError(e);\n    }));\n  }\n  update(cliente) {\n    return this.http.put(`${this.urlEndPoint}/${cliente.id}`, cliente, {\n      headers: this.httpHeader\n    }).pipe(catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      console.error(e.error.mensaje);\n      swal.fire(e.error.mensaje, e.error.error, 'error');\n      return throwError(e);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndPoint}/${id}`, {\n      headers: this.httpHeader\n    }).pipe(catchError(e => {\n      console.error(e.error.mensaje);\n      swal.fire(e.error.mensaje, e.error.error, 'error');\n      return throwError(e);\n    }));\n  }\n}\nClienteService.ɵfac = function ClienteService_Factory(t) {\n  return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClienteService,\n  factory: ClienteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["formatDate","throwError","HttpHeaders","map","catchError","swal","ClienteService","constructor","http","router","urlEndPoint","httpHeader","getClientes","get","pipe","response","clientes","cliente","nombre","toUpperCase","createAt","create","post","headers","e","status","console","error","mensaje","fire","getCliente","id","navigate","update","put","delete","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\spring5\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { formatDate } from \"@angular/common\";\nimport { CLIENTES } from \"./clientes.json\";\nimport { Cliente } from './cliente';\nimport { of, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map, catchError } from \"rxjs/operators\";\nimport swal from 'sweetalert2';\nimport { Router } from \"@angular/router\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private urlEndPoint: string = 'http://localhost:8080/api/clientes';\n\n  private httpHeader = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient, private router:Router) { }\n\n  getClientes(): Observable<Cliente[]>{\n    //return of(CLIENTES);\n    return this.http.get(this.urlEndPoint).pipe(\n      map(response => {\n      \n      let clientes = response as Cliente[];\n\n      return clientes.map(cliente => {\n        cliente.nombre = cliente.nombre.toUpperCase();\n        cliente.createAt = formatDate(cliente.createAt, 'dd-MM-yyyy', 'en-US');\n        return cliente;\n      });\n      }\n      )\n    );\n  }\n\n  create(cliente: Cliente) : Observable<Cliente>{\n    return this.http.post<any>(this.urlEndPoint, cliente, {headers: this.httpHeader}).pipe(\n      map( (response:any) => response.cliente as Cliente),\n      catchError(e => {\n\n        if(e.status ==400){\n          return throwError(e);\n        }\n\n        console.error(e.error.mensaje);\n        swal.fire(e.error.mensaje, e.error.error,'error');\n        return throwError(e);\n      })\n    )\n  }\n\n\n  getCliente(id): Observable<Cliente>{\n    return this.http.get<Cliente>(`${this.urlEndPoint}/${id}`).pipe(\n      catchError(e => {\n        this.router.navigate(['/clientes']);\n          console.error(e.error.mensaje);\n          swal.fire('Error al editar', e.error.mensaje, 'error');\n          return  throwError(e)\n      })\n    )\n  }\n\n\n  update(cliente: Cliente): Observable<any>{\n    return this.http.put<any>(`${this.urlEndPoint}/${cliente.id}`, cliente, {headers: this.httpHeader}).pipe(\n      catchError(e => {\n\n        if(e.status ==400){\n          return throwError(e);\n        }\n        console.error(e.error.mensaje);\n        swal.fire(e.error.mensaje, e.error.error,'error');\n        return throwError(e);\n      })\n    )\n  }\n\n  delete(id: number): Observable<Cliente>{\n    return this.http.delete<Cliente>(`${this.urlEndPoint}/${id}`, {headers: this.httpHeader}).pipe(\n      catchError(e => {\n        console.error(e.error.mensaje);\n        swal.fire(e.error.mensaje, e.error.error,'error');\n        return throwError(e);\n      })\n    )\n  }\n}\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}