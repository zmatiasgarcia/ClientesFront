{"ast":null,"code":"import { CLIENTES } from \"./clientes.json\";\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\n/*\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private urlEndPoint: string = 'http://localhost:8080/api/clientes';\n\n  constructor(private http: HttpClient) { }\n\n  getClientes(): Observable<Cliente[]>{\n    //return of(CLIENTES);\n    return this.http.get(this.urlEndPoint).pipe(\n      map((response) => response as Cliente[])\n    );\n  }\n\n}\n*/\nexport class ClienteService {\n  constructor() {}\n  getClientes() {\n    return of(CLIENTES);\n  }\n}\nClienteService.ɵfac = function ClienteService_Factory(t) {\n  return new (t || ClienteService)();\n};\nClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClienteService,\n  factory: ClienteService.ɵfac\n});","map":{"version":3,"names":["CLIENTES","of","ClienteService","constructor","getClientes","factory","ɵfac"],"sources":["C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CLIENTES } from \"./clientes.json\";\nimport { Cliente } from './cliente';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\n/*\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private urlEndPoint: string = 'http://localhost:8080/api/clientes';\n\n  constructor(private http: HttpClient) { }\n\n  getClientes(): Observable<Cliente[]>{\n    //return of(CLIENTES);\n    return this.http.get(this.urlEndPoint).pipe(\n      map((response) => response as Cliente[])\n    );\n  }\n\n}\n*/\n\n@Injectable()\nexport class ClienteService {\n\n\n\n  constructor() { }\n\n  getClientes(): Observable<Cliente[]>{\n    return of(CLIENTES);\n  }\n\n}\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,iBAAiB;AAG1C,SAASC,EAAE,QAAQ,MAAM;;AAIzB;;;;;;;;;;;;;;;;;;;AAqBA,OAAM,MAAOC,cAAc;EAIzBC,YAAA,GAAgB;EAEhBC,WAAWA,CAAA;IACT,OAAOH,EAAE,CAACD,QAAQ,CAAC;EACrB;;AARWE,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAG,OAAA,EAAdH,cAAc,CAAAI;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}