{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/clientes/form\", a1];\n};\nfunction ClientesComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 9);\n    i0.ɵɵtext(13, \"Editar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.createAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, cliente_r1.id));\n  }\n}\nconst _c1 = function () {\n  return [\"/clientes/form\"];\n};\nexport class ClientesComponent {\n  constructor(clienteService) {\n    this.clienteService = clienteService;\n  }\n  ngOnInit() {\n    this.clienteService.getClientes().subscribe(clientes => this.clientes = clientes);\n  }\n  delete(cliente) {}\n}\nClientesComponent.ɵfac = function ClientesComponent_Factory(t) {\n  return new (t || ClientesComponent)(i0.ɵɵdirectiveInject(i1.ClienteService));\n};\nClientesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientesComponent,\n  selectors: [[\"app-clientes\"]],\n  decls: 28,\n  vars: 3,\n  consts: [[1, \"card\", \"border-primary\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\", \"text-primary\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"my-2\", \"text-left\"], [\"type\", \"button\", 1, \"btn\", \"btn-rounded\", \"btn-primary\", 3, \"routerLink\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"name\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"]],\n  template: function ClientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2, \"Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h5\", 3);\n      i0.ɵɵtext(5, \"Listado de clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 4);\n      i0.ɵɵtext(7, \"Some quick example text to build on the card title and make up the bulk of the card's content.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Crear Cliente\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"table\", 7)(12, \"thead\")(13, \"tr\")(14, \"th\");\n      i0.ɵɵtext(15, \"id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"apellido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"fecha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Editar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, ClientesComponent_tr_27_Template, 14, 8, \"tr\", 8);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c1));\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","cliente_r1","id","nombre","apellido","email","createAt","ɵɵproperty","ɵɵpureFunction1","_c0","ClientesComponent","constructor","clienteService","ngOnInit","getClientes","subscribe","clientes","delete","cliente","ɵɵdirectiveInject","i1","ClienteService","selectors","decls","vars","consts","template","ClientesComponent_Template","rf","ctx","ɵɵtemplate","ClientesComponent_tr_27_Template","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\clientes.component.ts","C:\\Users\\matias\\spring5\\angular\\clientes-app\\src\\app\\clientes\\clientes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from \"./cliente\";\nimport { ClienteService } from './cliente.service';\n\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent {\n\n  clientes: Cliente[] ;\n\n  constructor(private clienteService: ClienteService){}\n  ngOnInit(){\n   this.clienteService.getClientes().subscribe(\n    clientes => this.clientes = clientes\n   );\n  }\n\n  delete(cliente: Cliente): void{\n    \n  }\n \n}\n","<div class=\"card border-primary mb-3\">\n    <div class=\"card-header\">Clientes</div>\n    <div class=\"card-body text-primary\">\n      <h5 class=\"card-title\">Listado de clientes</h5>\n      <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    \n      <div class=\"my-2 text-left\">\n        <button class=\"btn btn-rounded btn-primary\" type=\"button\" [routerLink]=\"['/clientes/form']\">Crear Cliente</button>\n      </div>\n        \n    <table class=\"table table-bordered table-striped\">\n        <thead>\n            <tr>\n                <th>id</th>\n                <th>nombre</th>\n                <th>apellido</th>\n                <th>email</th>\n                <th>fecha</th>\n                <th>Editar</th>\n            </tr>\n           \n        </thead>\n        <tbody>\n            <tr *ngFor=\"let cliente of clientes\">\n                <td>{{cliente.id}}</td>\n                <td>{{cliente.nombre}}</td>\n                <td>{{cliente.apellido}}</td>\n                <td>{{cliente.email}}</td>\n                <td>{{cliente.createAt}}</td>\n\n                <td>\n                    <button type=\"button\" name=\"button\" [routerLink]=\"['/clientes/form', cliente.id]\" class=\"btn btn-primary\">Editar</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    \n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}